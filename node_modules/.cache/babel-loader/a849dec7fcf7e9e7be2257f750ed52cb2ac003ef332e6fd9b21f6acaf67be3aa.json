{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nconst options = {\n  data() {\n    return {\n      edit: true,\n      user: {\n        uid: '',\n        uname: '',\n        uphone: '',\n        _password: '',\n        //确认密码\n        password: ''\n      },\n      rules: {\n        uname: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        uphone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: ' ',\n          trigger: 'blur'\n        }],\n        _password: [{\n          required: true,\n          message: ' ',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.user.uid = this.$store.state.user.uid;\n    this.refresh();\n  },\n  methods: {\n    //获取用户信息\n    refresh() {\n      axios.get('/api/users/' + this.user.uid).then(res => {\n        // console.log(res);\n        if (res.data.code === 20041) {\n          this.user = res.data.data;\n          this.user.password = null;\n        } else {\n          this.$message({\n            message: '获取用户信息失败',\n            type: 'error'\n          });\n          //跳转到主页面\n          this.$router.push({\n            path: '/home/book-manage'\n          });\n        }\n      });\n    },\n    //检查密码是否为空\n    pwdCheck() {\n      if (this.user.password == '' || this.user.password == null) {\n        this.$message({\n          message: '请输入密码',\n          type: 'error'\n        });\n        return false;\n      }\n      return true;\n    },\n    //检查两次密码是否一致\n    _pwdCheck() {\n      if (!this.pwdCheck()) {\n        return;\n      }\n      if (this.user._password == '' || this.user._password == null) {\n        this.$message({\n          message: '请再次输入密码',\n          type: 'error'\n        });\n        return false;\n      } else if (this.user.password !== this.user._password) {\n        this.$message({\n          message: '两次输入的密码不一致',\n          type: 'error'\n        });\n        return false;\n      }\n      return true;\n    },\n    //取消编辑\n    noEdit() {\n      this.edit = true;\n    },\n    //编辑\n    setEdit() {\n      this.edit = false;\n    },\n    //提交\n    submitForm() {\n      if (!this._pwdCheck()) {\n        return;\n      }\n      if (this.user === null || this.user.uid === '' || this.user.uname === '' || this.user.uphone === '') {\n        this.$message({\n          message: '请填写完整信息',\n          type: 'error'\n        });\n      } else {\n        axios.put('/api/users', this.user).then(res => {\n          // console.log(res);\n          if (res.data.code === 20031) {\n            this.$message({\n              message: '修改成功',\n              type: 'success'\n            });\n          } else {\n            this.$message({\n              message: '修改失败',\n              type: 'error'\n            });\n          }\n          this.refresh();\n          this.edit = true;\n        });\n      }\n    }\n  }\n};\nexport default options;","map":{"version":3,"names":["axios","options","data","edit","user","uid","uname","uphone","_password","password","rules","required","message","trigger","created","$store","state","refresh","methods","get","then","res","code","$message","type","$router","push","path","pwdCheck","_pwdCheck","noEdit","setEdit","submitForm","put"],"sources":["src/views/MyInformation.vue"],"sourcesContent":["<template>\n    <div style=\"width: 30%;margin: 0 auto;margin-top: 15%;\">\n        <el-form ref=\"user\" :rules=\"rules\" style=\"text-align: center;\"\n                :model=\"user\" label-width=\"150px\">\n\n            <el-form-item label=\"用户名\" prop=\"uid\">\n                <el-input v-model=\"user.uid\" style=\"width: 218px\" disabled=\"true\"\n                ></el-input>\n            </el-form-item>\n\n            <el-form-item label=\"姓名\" prop=\"uname\">\n                <el-input v-model=\"user.uname\" style=\"width: 218px\" :disabled=\"edit\">\n                </el-input>\n            </el-form-item>\n\n            <el-form-item label=\"手机号\" prop=\"uphone\">\n                <el-input v-model=\"user.uphone\" style=\"width: 218px\" :disabled=\"edit\">\n                </el-input>\n            </el-form-item> \n\n            <el-form-item label=\"新密码\" prop=\"password\" v-if=\"!edit\">\n                <el-input show-password v-model=\"user.password\" style=\"width: 218px\"\n                          :disabled=\"edit\" v-on:blur=\"pwdCheck\">\n                </el-input>\n            </el-form-item>\n\n            <el-form-item label=\"确认新密码\" prop=\"_password\" v-if=\"!edit\">\n                <el-input show-password v-model=\"user._password\" style=\"width: 218px\"\n                          :disabled=\"edit\"\n                v-on:blur=\"_pwdCheck\">\n                </el-input>\n            </el-form-item>\n\n            <el-form-item v-if=\"edit\">\n                <el-button type=\"primary\" style=\"margin-right: 55px;\" @click=\"setEdit\">编辑\n                </el-button>\n            </el-form-item>\n\n            <el-form-item v-if=\"!edit\">\n                <el-button type=\"primary\" style=\"margin-right: 55px;\" @click=\"submitForm\">提交\n                </el-button>\n                <el-button type=\"primary\" style=\"margin-right: 55px;\" @click=\"noEdit\">取消\n                </el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\nconst options = {\n    data() {\n        return {\n            edit: true,\n            user:{\n                uid:'',\n                uname:'',\n                uphone:'',\n                _password:'',//确认密码\n                password:''\n            },\n            rules: {\n                uname: [\n                    {required: true, message: '请输入姓名', trigger: 'blur'}\n                ],\n                uphone: [\n                    {required: true, message: '请输入手机号', trigger: 'blur'}\n                ],\n                password: [\n                    {required: true, message: ' ', trigger: 'blur'}\n                ],\n                _password: [\n                    {required: true, message: ' ', trigger: 'blur'}\n                ]\n            }\n        };\n    },\n    created(){\n        this.user.uid = this.$store.state.user.uid;\n        this.refresh();\n    },\n    methods:{\n        //获取用户信息\n        refresh(){\n            axios.get('/api/users/'+this.user.uid).then(res => {\n                // console.log(res);\n                if (res.data.code === 20041) {\n                    this.user = res.data.data;\n                    this.user.password = null;\n                } else {\n                    this.$message({\n                        message: '获取用户信息失败',\n                        type: 'error'\n                    });\n                    //跳转到主页面\n                    this.$router.push({path: '/home/book-manage'});\n                }\n            })\n        },\n        //检查密码是否为空\n        pwdCheck(){\n            if(this.user.password == '' || this.user.password == null){\n                this.$message({\n                    message: '请输入密码',\n                    type: 'error'\n                });\n                return false;\n            }\n            return true;\n        },\n        //检查两次密码是否一致\n        _pwdCheck(){\n            if(!this.pwdCheck()){\n                return;\n            }\n            if(this.user._password == '' || this.user._password == null){\n                this.$message({\n                    message: '请再次输入密码',\n                    type: 'error'\n                });\n                return false;\n            }else if(this.user.password !== this.user._password){\n                this.$message({\n                    message: '两次输入的密码不一致',\n                    type: 'error'\n                });\n                return false;\n            }\n            return true;\n        },\n        //取消编辑\n        noEdit(){\n            this.edit = true;\n        },\n        //编辑\n        setEdit(){\n            this.edit = false;\n        },\n        //提交\n        submitForm(){\n            if(!this._pwdCheck()){\n                return;\n            }\n            if(this.user === null || this.user.uid === ''\n                || this.user.uname === '' || this.user.uphone === ''){\n                this.$message({\n                    message: '请填写完整信息',\n                    type: 'error'\n                });\n            }else{\n                axios.put('/api/users', this.user).then(res => {\n                    // console.log(res);\n                    if (res.data.code === 20031) {\n                        this.$message({\n                            message: '修改成功',\n                            type: 'success'\n                        });\n                    } else {\n                        this.$message({\n                            message: '修改失败',\n                            type: 'error'\n                        });\n                    }\n                    this.refresh();\n                    this.edit = true;\n                })\n            }\n        }\n    }\n    \n}\nexport default options;\n</script>\n<style>\n.rg_table {\n    margin-top: 60px;\n    border-spacing: 10px;\n}\n\n.rg_bg{\n    width: 100%;\n    height: 100vh;\n    margin: auto;\n    background-image: linear-gradient(to right, #fbc2eb, #a6c1ee);\n    position: absolute;\n    height: 100%;\n}\n\n.rg_layout {\n    width: 900px;\n    height: 500px;\n    border: 5px solid #EEEEEE;\n    border-radius: 15px;\n    background-color: white;\n    /*让div水平居中*/\n    margin: auto;\n    margin-top: 11%;\n}\n\n.rg_left {\n    float: left;\n    margin: 15px;\n    width: 20%;\n}\n\n.rg_left>p:first-child {\n    color: #FFD026;\n    font-size: 20px;\n}\n\n.rg_left>p:last-child {\n    color: #A6A6A6;\n}\n\n.rg_center {\n    float: left;\n    width: 450px;\n    margin: 15px;\n}\n\n.rg_right {\n    float: right;\n    margin: 15px;\n}\n\n.rg_right>p:first-child {\n    font-size: 15px;\n}\n\n.rg_right p a {\n    color: #a6c1ee;\n}\n\n.td_left {\n    width: 100px;\n    text-align: right;\n    height: 45px;\n}\n\n.td_right {\n    padding-left: 50px;\n}\n\n#username,\n#password,\n#_password,\n#email,\n#name,\n#tel,\n#checkcode,\n#birthday {\n    width: 251px;\n    height: 32px;\n    border: 1px solid #A6A6A6;\n    /*设置边框圆角*/\n    border-radius: 5px;\n    padding-left: 10px;\n}\n\n#checkcode {\n    width: 110px;\n}\n\n#img_check {\n    margin-left: 15px;\n    height: 40px;\n    /*设置垂直居中*/\n    vertical-align: middle;\n}\n\n#btn_sub {\n    border-radius: 8px;\n    width: 150px;\n    height: 40px;\n    background-color: #FFD026;\n    border: 1px solid #FFD026;\n    margin-top: 20px;\n}\n</style>\n"],"mappings":";AAgDA,OAAAA,KAAA;AACA,MAAAC,OAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA;QACAC,GAAA;QACAC,KAAA;QACAC,MAAA;QACAC,SAAA;QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAJ,KAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,MAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,SAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,QAAA;IACA,KAAAV,IAAA,CAAAC,GAAA,QAAAU,MAAA,CAAAC,KAAA,CAAAZ,IAAA,CAAAC,GAAA;IACA,KAAAY,OAAA;EACA;EACAC,OAAA;IACA;IACAD,QAAA;MACAjB,KAAA,CAAAmB,GAAA,sBAAAf,IAAA,CAAAC,GAAA,EAAAe,IAAA,CAAAC,GAAA;QACA;QACA,IAAAA,GAAA,CAAAnB,IAAA,CAAAoB,IAAA;UACA,KAAAlB,IAAA,GAAAiB,GAAA,CAAAnB,IAAA,CAAAA,IAAA;UACA,KAAAE,IAAA,CAAAK,QAAA;QACA;UACA,KAAAc,QAAA;YACAX,OAAA;YACAY,IAAA;UACA;UACA;UACA,KAAAC,OAAA,CAAAC,IAAA;YAAAC,IAAA;UAAA;QACA;MACA;IACA;IACA;IACAC,SAAA;MACA,SAAAxB,IAAA,CAAAK,QAAA,eAAAL,IAAA,CAAAK,QAAA;QACA,KAAAc,QAAA;UACAX,OAAA;UACAY,IAAA;QACA;QACA;MACA;MACA;IACA;IACA;IACAK,UAAA;MACA,UAAAD,QAAA;QACA;MACA;MACA,SAAAxB,IAAA,CAAAI,SAAA,eAAAJ,IAAA,CAAAI,SAAA;QACA,KAAAe,QAAA;UACAX,OAAA;UACAY,IAAA;QACA;QACA;MACA,gBAAApB,IAAA,CAAAK,QAAA,UAAAL,IAAA,CAAAI,SAAA;QACA,KAAAe,QAAA;UACAX,OAAA;UACAY,IAAA;QACA;QACA;MACA;MACA;IACA;IACA;IACAM,OAAA;MACA,KAAA3B,IAAA;IACA;IACA;IACA4B,QAAA;MACA,KAAA5B,IAAA;IACA;IACA;IACA6B,WAAA;MACA,UAAAH,SAAA;QACA;MACA;MACA,SAAAzB,IAAA,kBAAAA,IAAA,CAAAC,GAAA,WACA,KAAAD,IAAA,CAAAE,KAAA,gBAAAF,IAAA,CAAAG,MAAA;QACA,KAAAgB,QAAA;UACAX,OAAA;UACAY,IAAA;QACA;MACA;QACAxB,KAAA,CAAAiC,GAAA,oBAAA7B,IAAA,EAAAgB,IAAA,CAAAC,GAAA;UACA;UACA,IAAAA,GAAA,CAAAnB,IAAA,CAAAoB,IAAA;YACA,KAAAC,QAAA;cACAX,OAAA;cACAY,IAAA;YACA;UACA;YACA,KAAAD,QAAA;cACAX,OAAA;cACAY,IAAA;YACA;UACA;UACA,KAAAP,OAAA;UACA,KAAAd,IAAA;QACA;MACA;IACA;EACA;AAEA;AACA,eAAAF,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}