{"ast":null,"code":"import axios from 'axios';\nconst options = {\n  data() {\n    return {\n      bookDate: [],\n      //书籍数据\n      name: 'MyBorrow',\n      // 组件名称\n      currentPage: 1,\n      // 当前页\n      sizePage: 10,\n      // 每页显示条数\n      totalPage: 0,\n      // 总条数\n      selid: '',\n      // 查询记录编号\n      selbid: '',\n      // 查询书籍编号\n      tableData: [] // 表格数据\n    };\n  },\n\n  mounted() {\n    this.seluid = this.$store.state.user.uid;\n    axios.get('/api/books').then(res => {\n      // console.log(res.data.data);\n      this.bookDate = res.data.data;\n      // console.log(this.bookDate);\n    });\n\n    this.refreshTable();\n  },\n  methods: {\n    //归还按钮\n    returnBook(row) {\n      // console.log(row);\n      this.borrow = {};\n      this.borrow.bid = row.bid;\n      this.borrow.rdate = this.getTime();\n      // console.log(this.borrow);\n      axios.put('/api/borrows/return', this.borrow).then(response => {\n        // console.log(response);\n        if (response.data.code === 20031) {\n          this.$message({\n            message: '归还成功',\n            type: 'success'\n          });\n          this.refreshTable();\n        } else {\n          this.$message({\n            message: '归还失败',\n            type: 'error'\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    //获取当前时间\n    getTime() {\n      var date = new Date();\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var day = date.getDate();\n      var hour = date.getHours();\n      var minute = date.getMinutes();\n      var second = date.getSeconds();\n      return year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;\n    },\n    //表格颜色\n    tableRowClassName({\n      row\n    }) {\n      // console.log(row);\n      if (row.rdate == null) {\n        return 'warning-row';\n      } else {\n        return 'success-row';\n      }\n    },\n    //按钮是否可用\n    isFree(row) {\n      return row.rdate == null;\n    },\n    //刷新表格\n    refreshTable() {\n      // console.log('refresh');\n      axios.get('/api/borrows/page/' + this.seluid, {\n        params: {\n          page: this.currentPage,\n          size: this.sizePage,\n          id: this.selid,\n          bid: this.selbid\n        }\n      }).then(res => {\n        // console.log(res);\n        this.tableData = res.data.records;\n        this.totalPage = res.data.total;\n      });\n    },\n    //表格内左侧多选框勾选情况\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //分页\n    handleSizeChange(val) {\n      this.sizePage = val;\n      this.refreshTable();\n    },\n    //分页\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.refreshTable();\n    }\n  }\n};\nexport default options;","map":{"version":3,"names":["axios","options","data","bookDate","name","currentPage","sizePage","totalPage","selid","selbid","tableData","mounted","seluid","$store","state","user","uid","get","then","res","refreshTable","methods","returnBook","row","borrow","bid","rdate","getTime","put","response","code","$message","message","type","catch","error","console","log","date","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","tableRowClassName","isFree","params","page","size","id","records","total","handleSelectionChange","val","multipleSelection","handleSizeChange","handleCurrentChange"],"sources":["src/views/MyBorrow.vue"],"sourcesContent":["<template>\n    <div>\n        <template>\n            <div style=\"margin-top: 20px;margin-left: 40px;margin-bottom: 20px;\">\n                <label style=\"font-family: '宋体';font-weight: bolder;\">快速查询：</label>\n                <span>\n                    <el-input placeholder=\"请输入借阅编号\" v-model=\"selid\" clearable\n                    style=\"width: 200px;margin-left: 20px;\" @input=\"refreshTable\"\n                    >\n                    </el-input>\n                    <el-input placeholder=\"请输入书籍编号\" v-model=\"selbid\" clearable\n                    style=\"width: 200px;margin-left: 20px;\" @input=\"refreshTable\"\n                    >\n                    </el-input>\n                </span>\n            </div>\n            <el-table :data=\"tableData\" style=\"width: 100%\"\n            @selection-change=\"handleSelectionChange\"\n                      :row-class-name=\"tableRowClassName\"\n            :header-cell-style=\"{background:'#f4f4f4',color:'#80878f'}\">\n                <el-table-column type=\"index\" label=\"序号\" width=\"100\" align=\"center\">\n                </el-table-column>\n                <el-table-column prop=\"id\" label=\"记录编号\" align=\"center\" sortable>\n                </el-table-column>\n                <el-table-column prop=\"uid\" label=\"用户名\" align=\"center\" sortable>\n                </el-table-column>\n                <el-table-column prop=\"bid\" label=\"书籍编号\" align=\"center\" sortable>\n                </el-table-column>\n                <el-table-column prop=\"bdate\" label=\"借阅时间\" align=\"center\" sortable>\n                </el-table-column>\n                <el-table-column prop=\"rdate\" label=\"归还时间\" align=\"center\" sortable>\n                </el-table-column>\n                <el-table-column label=\"操作\" align=\"center\">\n                    <template slot-scope=\"scope\">\n                        <el-button type=\"success\" size=\"small\"\n                         @click=\"returnBook(scope.row)\" :disabled=\"!isFree(scope.row)\">\n                         归还</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <el-pagination style=\"text-align: center;margin-top: 8px;\"\n                @size-change=\"handleSizeChange\"\n                @current-change=\"handleCurrentChange\"\n                :current-page=\"currentPage\"\n                :page-sizes=\"[5, 10, 15, 20]\"\n                :page-size=\"sizePage\"\n                layout=\"total, sizes, prev, pager, next, jumper\"\n                :total=\"totalPage\">\n                </el-pagination>\n        </template>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\nconst options = {\n    data() {\n        return {\n            bookDate:[], //书籍数据\n            name: 'MyBorrow', // 组件名称\n            currentPage: 1, // 当前页\n            sizePage: 10, // 每页显示条数\n            totalPage: 0, // 总条数\n            selid: '', // 查询记录编号\n            selbid: '', // 查询书籍编号\n            tableData: [], // 表格数据\n        }\n    },\n    mounted() {\n        this.seluid=this.$store.state.user.uid;\n        axios.get('/api/books').then(res => {\n            // console.log(res.data.data);\n            this.bookDate = res.data.data;\n        // console.log(this.bookDate);\n        });\n        this.refreshTable();\n    },\n    methods: {\n        //归还按钮\n        returnBook(row) {\n            // console.log(row);\n            this.borrow={};\n            this.borrow.bid=row.bid;\n            this.borrow.rdate=this.getTime();\n            // console.log(this.borrow);\n            axios.put('/api/borrows/return', this.borrow)\n                .then(response => {\n                    // console.log(response);\n                    if (response.data.code === 20031) {\n                        this.$message({\n                            message: '归还成功',\n                            type: 'success'\n                        });\n                        this.refreshTable();\n                    } else {\n                        this.$message({\n                            message: '归还失败',\n                            type: 'error'\n                        });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        },\n        //获取当前时间\n        getTime() {\n            var date = new Date();\n            var year = date.getFullYear();\n            var month = date.getMonth() + 1;\n            var day = date.getDate();\n            var hour = date.getHours();\n            var minute = date.getMinutes();\n            var second = date.getSeconds();\n            return year + '-' + month + '-' + day + ' ' + hour + ':' +\n                minute + ':' + second;\n        },\n        //表格颜色\n        tableRowClassName({row}) {\n            // console.log(row);\n            if (row.rdate == null) {\n                return 'warning-row';\n            } else  {\n                return 'success-row';\n            }\n        },\n        //按钮是否可用\n        isFree(row) {\n            return row.rdate == null;\n        },\n        //刷新表格\n        refreshTable() {\n            // console.log('refresh');\n            axios.get('/api/borrows/page/'+this.seluid,{\n                params: {\n                    page: this.currentPage,\n                    size: this.sizePage,\n                    id: this.selid,\n                    bid: this.selbid\n                }\n            }).then(res => {\n                // console.log(res);\n                this.tableData = res.data.records;\n                this.totalPage = res.data.total;\n            })\n        },          \n        //表格内左侧多选框勾选情况\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n        },\n        //分页\n        handleSizeChange(val) {\n            this.sizePage = val;\n            this.refreshTable();\n        },\n        //分页\n        handleCurrentChange(val) {\n            this.currentPage = val;\n            this.refreshTable();\n        }\n    }\n}\nexport default options;\n</script>\n<style>\n .el-table .warning-row {\n    background: rgb(255, 123, 0);\n  }\n\n  .el-table .success-row {\n    background: #c7c7c7;\n  }\n</style>"],"mappings":"AAqDA,OAAAA,KAAA;AACA,MAAAC,OAAA;EACAC,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,IAAA;MAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;MACAC,SAAA;MAAA;MACAC,KAAA;MAAA;MACAC,MAAA;MAAA;MACAC,SAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,MAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,GAAA;IACAhB,KAAA,CAAAiB,GAAA,eAAAC,IAAA,CAAAC,GAAA;MACA;MACA,KAAAhB,QAAA,GAAAgB,GAAA,CAAAjB,IAAA,CAAAA,IAAA;MACA;IACA;;IACA,KAAAkB,YAAA;EACA;EACAC,OAAA;IACA;IACAC,WAAAC,GAAA;MACA;MACA,KAAAC,MAAA;MACA,KAAAA,MAAA,CAAAC,GAAA,GAAAF,GAAA,CAAAE,GAAA;MACA,KAAAD,MAAA,CAAAE,KAAA,QAAAC,OAAA;MACA;MACA3B,KAAA,CAAA4B,GAAA,6BAAAJ,MAAA,EACAN,IAAA,CAAAW,QAAA;QACA;QACA,IAAAA,QAAA,CAAA3B,IAAA,CAAA4B,IAAA;UACA,KAAAC,QAAA;YACAC,OAAA;YACAC,IAAA;UACA;UACA,KAAAb,YAAA;QACA;UACA,KAAAW,QAAA;YACAC,OAAA;YACAC,IAAA;UACA;QACA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACA;IACAR,QAAA;MACA,IAAAW,IAAA,OAAAC,IAAA;MACA,IAAAC,IAAA,GAAAF,IAAA,CAAAG,WAAA;MACA,IAAAC,KAAA,GAAAJ,IAAA,CAAAK,QAAA;MACA,IAAAC,GAAA,GAAAN,IAAA,CAAAO,OAAA;MACA,IAAAC,IAAA,GAAAR,IAAA,CAAAS,QAAA;MACA,IAAAC,MAAA,GAAAV,IAAA,CAAAW,UAAA;MACA,IAAAC,MAAA,GAAAZ,IAAA,CAAAa,UAAA;MACA,OAAAX,IAAA,SAAAE,KAAA,SAAAE,GAAA,SAAAE,IAAA,SACAE,MAAA,SAAAE,MAAA;IACA;IACA;IACAE,kBAAA;MAAA7B;IAAA;MACA;MACA,IAAAA,GAAA,CAAAG,KAAA;QACA;MACA;QACA;MACA;IACA;IACA;IACA2B,OAAA9B,GAAA;MACA,OAAAA,GAAA,CAAAG,KAAA;IACA;IACA;IACAN,aAAA;MACA;MACApB,KAAA,CAAAiB,GAAA,6BAAAL,MAAA;QACA0C,MAAA;UACAC,IAAA,OAAAlD,WAAA;UACAmD,IAAA,OAAAlD,QAAA;UACAmD,EAAA,OAAAjD,KAAA;UACAiB,GAAA,OAAAhB;QACA;MACA,GAAAS,IAAA,CAAAC,GAAA;QACA;QACA,KAAAT,SAAA,GAAAS,GAAA,CAAAjB,IAAA,CAAAwD,OAAA;QACA,KAAAnD,SAAA,GAAAY,GAAA,CAAAjB,IAAA,CAAAyD,KAAA;MACA;IACA;IACA;IACAC,sBAAAC,GAAA;MACA,KAAAC,iBAAA,GAAAD,GAAA;IACA;IACA;IACAE,iBAAAF,GAAA;MACA,KAAAvD,QAAA,GAAAuD,GAAA;MACA,KAAAzC,YAAA;IACA;IACA;IACA4C,oBAAAH,GAAA;MACA,KAAAxD,WAAA,GAAAwD,GAAA;MACA,KAAAzC,YAAA;IACA;EACA;AACA;AACA,eAAAnB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}